缓冲区 int b=0;
{
b=0;
}
try
try_after
after
the input code is
第0行：int b=0;
第1行：{
第2行：b=0;
第3行：}
end

int b=0;
{
b=0;
}
使用的语法：program-> compoundstmt 
使用的语法：compoundstmt-> { stmts } 
接收{
使用的语法：stmts-> stmt stmts 
使用的语法：stmt-> assgstmt 
使用的语法：assgstmt-> ID = arithexpr ; 
接收b
接收=
使用的语法：arithexpr-> multexpr arithexprprime 
使用的语法：multexpr-> simpleexpr multexprprime 
使用的语法：simpleexpr-> Num 
接收0
使用的语法：multexprprime->空
使用的语法：arithexprprime->空
接收;
使用的语法：stmts->空
接收}
语法成功！！！
out:使用的语法：program-> compoundstmt 
使用的语法：compoundstmt-> { stmts } 
接收{
使用的语法：stmts-> stmt stmts 
使用的语法：stmt-> assgstmt 
使用的语法：assgstmt-> ID = arithexpr ; 
接收b
接收=
使用的语法：arithexpr-> multexpr arithexprprime 
使用的语法：multexpr-> simpleexpr multexprprime 
使用的语法：simpleexpr-> Num 
接收0
接收;
接收}

key: b value:Identifiers{name='b', type='int', value='0', tacName='ID0'}
UI输出t1 = 0
UI输出ID0 = t1
b: 0
UI输出b: 0
